<launch>
    <arg name="param_folder" default="$(find params)"/>
    <arg name="ip" default="192.168.10.4" />
    <arg name="port" default="2000" />
    <arg name="serialport" default="/dev/ttyS0" />
    <arg name="baudrate" default="115200" />
    <!-- log_folder, Serial port only -->
    <arg name="log_folder" default="/home/caros/gpsbin/" />
    <arg name="onboard_filename" default="gps.bin" />
    <arg name="is_save_pc" default="true" />
    <arg name="is_save_pp6" default="true" />
    <arg name="porttype" default="0" />
    <arg name="imu_type" default="ADIS16488" />     
    <arg name="extrinsics_velodyne64" default="$(arg param_folder)/velodyne64_novatel_extrinsics.yaml"/>
    <arg name="extrinsics_velodyne16_left" default="$(arg param_folder)/velodyne16_left_extrinsics.yaml"/>
    <arg name="extrinsics_velodyne16_right" default="$(arg param_folder)/velodyne16_right_extrinsics.yaml"/>
    <arg name="extrinsics_velodyne16_back" default="$(arg param_folder)/velodyne16_back_extrinsics.yaml"/>    
    <arg name="extrinsics_radar_front" default="$(arg param_folder)/radar_front_extrinsics.yaml"/>
    <arg name="extrinsics_radar_rear" default="$(arg param_folder)/radar_rear_extrinsics.yaml"/>       
    <arg name="extrinsics_onsemi_obstacle" default="$(arg param_folder)/onsemi_obstacle_extrinsics.yaml"/>
    <arg name="extrinsics_onsemi_traffic" default="$(arg param_folder)/onsemi_traffic_extrinsics.yaml"/>    
    <param name="proj4_text" value="+proj=utm +zone=50 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs " />  

  <node name="novatel_span_driver" pkg="novatel_span_driver" type="driver" output="log" clear_params="true" required="true">
    <param name="ip" value="$(arg ip)" />
    <param name="port" value="$(arg port)" />
    <param name="is_save_pc" value="$(arg is_save_pc)" />
    <param name="is_save_pp6" value="$(arg is_save_pp6)" />
    <param name="serialport" value="$(arg serialport)" />
    <param name="baudrate" value="$(arg baudrate)" />
    <param name="log_folder" value="$(arg log_folder)" />
    <!-- <param name="onboard_filename" value="$(arg onboard_filename)" /> -->
    <param name="imu_type" value="$(arg imu_type)" />
# port type:   0 for socket ;  1 for serial
    <param name="porttype" value="$(arg porttype)" />
    <rosparam ns="configuration">
      log_request:
        bestposb: ontime 1.0 0.2
        bestgnssposb: ontime 1.0 0.7
        inspvaxb: ontime 1.0 0.7
        inspvab: ontime 0.01
        rawimub: onnew
        corrimudatab: ontime 0.01
        mark1pvab: onnew
        RANGECMPB: ONTIME 1.0
        RAWEPHEMB: ONCHANGED
        GLOEPHEMERISB: ONCHANGED
        BDSEPHEMERISB: ONCHANGED
        IMUTOANTOFFSETSB: ONCE
        VEHICLEBODYROTATIONB: ONCHANGED
      postprocess_log:
        RANGECMPB: ONTIME 1.0
        RAWIMUB: ONNEW
        RAWEPHEMB: ONCHANGED
        GLOEPHEMERISB: ONCHANGED
        BDSEPHEMERISB: ONCHANGED
        IMUTOANTOFFSETSB: ONCHANGED
        VEHICLEBODYROTATIONB: ONCHANGED
        MARK1PVAB: ONNEW
        INSPVAB : ONTIME 0.05
      login_commands:
        GPRMC: LOG COM2 GPRMC ONTIME 1.0 0.25
        MARK2ENABLE: EVENTOUTCONTROL MARK2 ENABLE POSITIVE 999999990 10
        MARK1ENABLE: EVENTOUTCONTROL MARK1 ENABLE POSITIVE 50000000 50000000
        QIANXUN: LOG NCOM1 GPGGA ONTIME 1
      logout_commands:
        MARK2DISABLE: EVENTOUTCONTROL MARK2 DISABLE
        MARK1DISABLE: EVENTOUTCONTROL MARK1 DISABLE
        FILECLOSE: LOGFILE CLOSE
    </rosparam>

    <!-- Whether or not the driver should publish a TF, and what frames it should
         be between. This configuration publishes odom -> base_link. -->
    <param name="publish_tf" value="true" />
    <param name="odom_frame" value="odom" />
    <param name="base_frame" value="base_link" />

    <!-- IMU rate; controls scaling of the imu/data topic values. This is a
         function of the underlying hardware IMU rate, which is 100Hz for IMU-CPT. -->
    <param name="rate" value="100" />

    <!-- Disable this if you don't want SPAN to use wheel encoder data. Remap the odom
         topic if your encoders publish elsewhere. -->
    <param name="enable_wheel_velocity" value="false" />

    <!-- Disable this if you'd like the Odometry to be absolute within the UTM zone
         rather than starting from an arbitrary zero origin. -->
    <param name="zero_start" value="true" />
    <remap from="/novatel_data/bestpos" to="/sensor/novatel/bestpos" />
    <remap from="/novatel_data/ack" to="/sensor/novatel/ack" />
    <remap from="/novatel_data/corrimudata" to="/sensor/novatel/corrimudata" />
    <remap from="/novatel_data/inscov" to="/sensor/novatel/inscov" />
    <remap from="/novatel_data/inspva" to="/sensor/novatel/inspva" />
    <remap from="/novatel_data/inspvax" to="/sensor/novatel/inspvax" />
    <remap from="/novatel_data/mark1pva" to="/sensor/novatel/mark1pva" />
    <remap from="/novatel_data/rawimu" to="/sensor/novatel/rawimu" />
    <remap from="/novatel_data/bestgnsspos" to="/sensor/novatel/bestgnsspos" />
  </node>
  
  <!--TODO: we need update external params after get these -->
  <node pkg="novatel_preprocess" type="extrinsics_broadcaster.py"
    args="$(arg extrinsics_velodyne64)" name="static_transform_velodyne64" />

  <node pkg="novatel_preprocess" type="extrinsics_broadcaster.py"
    args="$(arg extrinsics_velodyne16_left)" name="static_transform_velodyne16_left" />

  <node pkg="novatel_preprocess" type="extrinsics_broadcaster.py"
    args="$(arg extrinsics_velodyne16_right)" name="static_transform_velodyne16_right" />

  <node pkg="novatel_preprocess" type="extrinsics_broadcaster.py"
    args="$(arg extrinsics_velodyne16_back)" name="static_transform_velodyne16_back" />

  <node pkg="novatel_preprocess" type="extrinsics_broadcaster.py"
    args="$(arg extrinsics_radar_front)" name="static_transform_radar_front" />

  <node pkg="novatel_preprocess" type="extrinsics_broadcaster.py"
    args="$(arg extrinsics_radar_rear)" name="static_transform_radar_rear" />

  <node pkg="novatel_preprocess" type="extrinsics_broadcaster.py"
    args="$(arg extrinsics_onsemi_obstacle)" name="static_transform_onsemi_obstacle" />

  <node pkg="novatel_preprocess" type="extrinsics_broadcaster.py"
    args="$(arg extrinsics_onsemi_traffic)" name="static_transform_onsemi_traffic" />

  <node pkg="novatel_preprocess" type="novatel_rawimu_republisher" name="novatel_rawimu_republisher_node" output="log">
    <param name="topic_rawimu" value="/sensor/novatel/rawimu"/> 
    <param name="imu_type" value="$(arg imu_type)" /> 
  </node>

  <node pkg="novatel_preprocess" type="novatel_corrimu_republisher" name="novatel_corrimu_republisher_node" output="log">
    <param name="topic_corrimu" value="/sensor/novatel/corrimudata"/> 
    <param name="topic_imu" value="/sensor/novatel/CorrImu"/> 
    <param name="imu_type" value="$(arg imu_type)" /> 
  </node>

  <node pkg="novatel_preprocess" type="novatel_odometry_republisher" name="novatel_odometry_republisher_node" output="log">
    <param name="topic_inspva" value="/sensor/novatel/inspva"/>
    <param name="topic_odometry" value="/sensor/novatel/Odometry"/>
    <param name="imu_type" value="$(arg imu_type)" />
  </node>

  <node pkg="novatel_preprocess" type="inspva_broadcaster" name="inspva_broadcaster_node" output="log">
    <param name="topic_odometry" value="/sensor/novatel/Odometry"/>
  </node>
</launch>
